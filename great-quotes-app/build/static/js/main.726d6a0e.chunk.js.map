{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/comments/CommentItem.jsx","components/comments/Comments.jsx","components/comments/CommentsList.jsx","components/comments/NewCommentForm.jsx","components/layout/Layout.jsx","components/layout/MainNavigation.jsx","components/quotes/HighlightedQuote.jsx","components/quotes/NoQuotesFound.jsx","components/UI/Card.jsx","components/UI/LoadingSpinner.jsx","components/quotes/QuoteForm.jsx","components/quotes/QuoteItem.jsx","components/quotes/QuoteList.jsx","components/quotes/QuoteList.module.css","components/comments/CommentItem.module.css","components/comments/Comments.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/HighlightedQuote.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","CommentItem","props","className","classes","item","text","Comments","commentsList","loadedComments","useState","isAddingComment","setIsAddingComment","console","log","useEffect","handleCommentAdded","length","comments","onClick","onCommentAdded","CommentsList","map","comment","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","current","value","trim","form","onSubmit","control","htmlFor","rows","ref","actions","Layout","children","styles","main","MainNavigation","header","to","logo","nav","activeClassName","active","HighlightedQuote","quote","author","NoQuotesFound","noquotes","Card","card","LoadingSpinner","spinner","QuoteForm","isLoading","onAddQuote","authorInputRef","textInputRef","isFillingForm","setIsFillingForm","when","location","onFocus","enteredAuthor","enteredText","loading","QuoteItem","QuoteList","quotes","history","useHistory","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","ascending","sort","quoteA","quoteB","sortQuotes","sorting","pathname","list","Quotes","lazy","Quote","NewQuote","NotFound","App","loader","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.726d6a0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-c7523-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\n// import { commentsService } from '../../services';\n\nimport { NewCommentForm, CommentsList, LoadingSpinner } from '../';\n\nimport classes from './Comments.module.css';\n\nconst Comments = ({ quoteId }) => {\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments, true);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  let commentsList;\n  console.log('quoteId: ', quoteId);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const handleCommentAdded = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    commentsList = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    commentsList = <CommentsList comments={ loadedComments } />;\n  }\n\n  if (status === 'completed' && (!loadedComments && loadedComments.length === 0)) {\n    commentsList = (\n      <div className=\"centered\">\n        <p>No comments have been added yet!</p>\n      </div>\n    );\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm id={ quoteId } onCommentAdded={ handleCommentAdded } />}\n      \n      {\n        commentsList\n      }\n    </section>\n  );\n};\n\nexport default Comments;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <ul className={classes.comments}>\n      {comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nimport { LoadingSpinner } from '../';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = ({ id, onCommentAdded }) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n\n  console.log('id: ', id);\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onCommentAdded();\n    }\n  }, [status, error, onCommentAdded]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const text = commentTextRef.current.value.trim();\n\n    sendRequest({ commentData: { text }, quoteId: id });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {\n        status === 'pending' ? (\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        ) : null\n      }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import React from 'react';\n\nimport { MainNavigation } from '../';\n\nimport styles from './Layout.module.css';\n\nfunction Layout({ children }) {\n  return (\n    <div>\n      <MainNavigation />\n\n      <main className={ styles.main }>\n        { children }\n      </main>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport styles from './MainNavigation.module.css';\n\nfunction MainNavigation(props) {\n  return (\n    <header className={ styles.header }>\n      <Link to=\"/\" className={ styles.logo }>Great Quotes</Link>\n\n      <nav className={ styles.nav }>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={ styles.active }>All Quotes</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/add-quote\" activeClassName={ styles.active }>Add a Quote</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","import React, { Fragment } from 'react';\n\nimport classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = ({ quote }) => {\n  return (\n    <Fragment>\n      {\n        quote ? (\n          <figure className={classes.quote}>\n            <p>{ quote.text }</p>\n            <figcaption>{ quote.author }</figcaption>\n          </figure>\n        ) : <h3>Sorry, we could not find the requested quote!</h3>\n      }\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n\n      <Link className=\"btn\" to=\"/add-quote\">A a Quote</Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = ({ isLoading, onAddQuote }) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [ isFillingForm, setIsFillingForm ] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    onAddQuote({ author: enteredAuthor, text: enteredText });\n  };\n\n  const handleFocus = () => {\n    setIsFillingForm(true);\n  };\n\n  const handleFormCompleted = () => {\n    setIsFillingForm(false);\n  };\n\n  /*\n    `react-router-dom` automatically provides the location object\n    to the `handlePromptMessage()` function. We can then use it to\n    display further information in the prompt message\n  */\n  const handlePromptMessage = (location) => {\n    console.log('handlePromptMessage called...', location);\n    return 'The data you entered will be lost if you leave this page. Do you want to leave ?'\n  }\n\n  return (\n    <Fragment>\n      {/*\n        Using the `<Prompt />` component from `react-router-dom` to display\n        a prompt to the user when a specific condition is met before navigating\n        to another page. The `<Prompt />` component take 2 props; the `when`\n        prop takes a boolean value to display/hide the prompt, the `message` prop\n        takes a function value to display a custom text message in the prompt\n      */}\n      <Prompt when={ isFillingForm } message={ handlePromptMessage } />\n      <Card>\n        <form className={classes.form} onFocus={ handleFocus } onSubmit={ handleSubmit }>\n          {isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn' onClick={ handleFormCompleted }>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n\n      <Link to={ `/quotes/${props.id}` } className=\"btn\">\n        Read more\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = ({ quotes }) => {\n  const history = useHistory();\n  /*\n    Using the `useLocation()` hook from `react-router-dom` to\n    get information about the currently loaded page;\n  */\n  const location = useLocation();\n\n  /*\n    Using the `URLSearchParams()` constructor to extract the\n    query parameters from the location object. The constructor\n    will instantiate a new URLSearchParams object which has\n    methods like `get()` to extract query parameters information\n  */\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(quotes, isSortingAscending);\n\n  const handleSorting = () => {\n    /*\n      Using the history object to navigate to a\n      path with a query parameter\n    */\n    // history.push(`${location.pathname}?sort=${ isSortingAscending ? 'desc' : 'asc'}`);\n\n    /*\n      An alternative way to define route we want to\n      navigate to is to pass an object to the `push()`\n      method\n    */\n    history.push({\n      pathname: location.pathname,\n      search: `sort=${ isSortingAscending ? 'desc' : 'asc'}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={ classes.sorting }>\n        <button onClick={ handleSorting }>Sort { isSortingAscending ? 'Descending' : 'Ascending' }</button>\n      </div>\n      \n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Layout, LoadingSpinner } from './components';\n\n/*\n  Using the `lazy()` method from `React` to implement\n  lazy loading of components such that the code of the\n  component being rendered on a specific route is only\n  downloaded when that route is active\n*/\nconst Quotes = lazy(() => import('./pages/Quotes'));\nconst Quote = lazy(() => import('./pages/Quote'));\nconst NewQuote = lazy(() => import('./pages/NewQuote'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n  const loader = (\n    <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  );\n  return (\n    <Layout>\n      {/*\n        Using the `<Suspense>` component from `React` to render\n        a fallback component when using lazy loading with on\n        defined routes. The `<Suspense>` component takes a `fallback`\n        prop which recieves a fallback component as value\n      */}\n      <Suspense fallback={ loader }>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n\n          <Route path=\"/quotes\" exact>\n            <Quotes />\n          </Route>\n\n          <Route path=\"/quotes/:id\">\n            <Quote />\n          </Route>\n          \n          <Route path=\"/add-quote\">\n            <NewQuote />\n          </Route>\n\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}