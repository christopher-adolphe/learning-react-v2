{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christopher/Documents/web/courses/04-react-the-complete-guide/learning-react-v2/meetup-next-js-app/pages/[meetupId]/index.js\";\n// import { Fragment } from 'react';\n// import { useRouter } from 'next/router';\nimport Meetup from '../../components/meetups/Meetup';\nconst MOCK_MEETUPS = [{\n  id: 'm1',\n  title: 'The First Meetup',\n  image: 'https://image.shutterstock.com/image-photo/view-malaga-bullring-harbor-spain-600w-281599199.jpg',\n  address: '5th Avenue, Malaga',\n  description: 'This is the first meetup description'\n}, {\n  id: 'm2',\n  title: 'The Second Meetup',\n  image: 'https://image.shutterstock.com/image-photo/dusk-view-barcelona-spain-plaza-600w-520067140.jpg',\n  address: '10th Street, Barcelona',\n  description: 'This is the second meetup description'\n}, {\n  id: 'm3',\n  title: 'The Third Meetup',\n  image: 'https://image.shutterstock.com/image-photo/old-town-prince-palace-on-600w-427693039.jpg',\n  address: '20th Avenue, Monaco',\n  description: 'This is the third meetup description'\n}];\n\nfunction MeetupDetail({\n  meetup\n}) {\n  // const router = useRouter();\n  // const { meetupId } = router.query;\n  // const meetup = MOCK_MEETUPS.find(meetup => meetup.id === meetupId);\n  return /*#__PURE__*/_jsxDEV(Meetup, {\n    meetup: meetup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticProps(context) {\n  /*\n    The `context` argument has access to routing\n    parameters\n  */\n  const {\n    meetupId\n  } = context.params;\n  const meetup = MOCK_MEETUPS.find(meetup => meetup.id === meetupId);\n  return {\n    props: {\n      meetup\n    }\n  };\n}\n/*\n  When a page has dynamic routes and uses `getStaticProps()`,\n  it needs to define a list of paths to be statically generated.\n  It returns an object with a `path` property whihc is an array\n  of `params` of each value that we can have for the dynamic\n  route. The returned object also has a `fallback` property which\n  is a boolean. If the `fallback` property is set to false then\n  this indicates Next.js that the list of path params is complete\n  and if a param that does not exist is provided the show a 404\n  page. If it is set to true, then this indicates Next.js to try\n  generate dynamically on the server if a params that does not\n  exist is passed as routing parameter\n*/\n\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      },\n      params: {\n        meetupId: 'm2'\n      },\n      params: {\n        meetupId: 'm3'\n      }\n    }],\n    fallback: false\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["/Users/christopher/Documents/web/courses/04-react-the-complete-guide/learning-react-v2/meetup-next-js-app/pages/[meetupId]/index.js"],"names":["Meetup","MOCK_MEETUPS","id","title","image","address","description","MeetupDetail","meetup","getStaticProps","context","meetupId","params","find","props","getStaticPaths","paths","fallback"],"mappings":";;AAAA;AACA;AAEA,OAAOA,MAAP,MAAmB,iCAAnB;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EAAE,iGAHT;AAIEC,EAAAA,OAAO,EAAE,oBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADmB,EAQnB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,KAAK,EAAE,+FAHT;AAIEC,EAAAA,OAAO,EAAE,wBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARmB,EAenB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EAAE,yFAHT;AAIEC,EAAAA,OAAO,EAAE,qBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CAfmB,CAArB;;AAwBA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAkC;AAChC;AACA;AAEA;AAEA,sBAAO,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAGA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACF;AACA;AACA;AACE,QAAM;AAAEC,IAAAA;AAAF,MAAeD,OAAO,CAACE,MAA7B;AAEA,QAAMJ,MAAM,GAAGP,YAAY,CAACY,IAAb,CAAkBL,MAAM,IAAIA,MAAM,CAACN,EAAP,KAAcS,QAA1C,CAAf;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLN,MAAAA;AADK;AADF,GAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeO,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,CACL;AACEJ,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAE;AADJ,OADV;AAIEC,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAE;AADJ,OAJV;AAOEC,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAE;AADJ;AAPV,KADK,CADF;AAcLM,IAAAA,QAAQ,EAAE;AAdL,GAAP;AAgBD;AAED,eAAeV,YAAf","sourcesContent":["// import { Fragment } from 'react';\n// import { useRouter } from 'next/router';\n\nimport Meetup from '../../components/meetups/Meetup';\n\nconst MOCK_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'The First Meetup',\n    image: 'https://image.shutterstock.com/image-photo/view-malaga-bullring-harbor-spain-600w-281599199.jpg',\n    address: '5th Avenue, Malaga',\n    description: 'This is the first meetup description'\n  },\n  {\n    id: 'm2',\n    title: 'The Second Meetup',\n    image: 'https://image.shutterstock.com/image-photo/dusk-view-barcelona-spain-plaza-600w-520067140.jpg',\n    address: '10th Street, Barcelona',\n    description: 'This is the second meetup description'\n  },\n  {\n    id: 'm3',\n    title: 'The Third Meetup',\n    image: 'https://image.shutterstock.com/image-photo/old-town-prince-palace-on-600w-427693039.jpg',\n    address: '20th Avenue, Monaco',\n    description: 'This is the third meetup description'\n  }\n];\n\nfunction MeetupDetail({ meetup }) {\n  // const router = useRouter();\n  // const { meetupId } = router.query;\n\n  // const meetup = MOCK_MEETUPS.find(meetup => meetup.id === meetupId);\n\n  return <Meetup meetup={ meetup } />;\n}\n\nexport async function getStaticProps(context) {\n  /*\n    The `context` argument has access to routing\n    parameters\n  */\n  const { meetupId } = context.params;\n\n  const meetup = MOCK_MEETUPS.find(meetup => meetup.id === meetupId);\n\n  return {\n    props: {\n      meetup\n    }\n  };\n}\n\n/*\n  When a page has dynamic routes and uses `getStaticProps()`,\n  it needs to define a list of paths to be statically generated.\n  It returns an object with a `path` property whihc is an array\n  of `params` of each value that we can have for the dynamic\n  route. The returned object also has a `fallback` property which\n  is a boolean. If the `fallback` property is set to false then\n  this indicates Next.js that the list of path params is complete\n  and if a param that does not exist is provided the show a 404\n  page. If it is set to true, then this indicates Next.js to try\n  generate dynamically on the server if a params that does not\n  exist is passed as routing parameter\n*/\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      {\n        params: {\n          meetupId: 'm1'\n        },\n        params: {\n          meetupId: 'm2'\n        },\n        params: {\n          meetupId: 'm3'\n        },\n      }\n    ],\n    fallback: false\n  };\n}\n\nexport default MeetupDetail;\n"]},"metadata":{},"sourceType":"module"}