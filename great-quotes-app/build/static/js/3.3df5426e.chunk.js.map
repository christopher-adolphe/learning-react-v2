{"version":3,"sources":["pages/NewQuote.jsx"],"names":["NewQuote","props","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","isLoading","onAddQuote","quote","console","log"],"mappings":"mIAAA,wDAkDeA,UAzCf,SAAkBC,GAChB,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAOfC,EAAUC,cA0BhB,OAxBAC,qBAAU,WACO,cAAXH,GAeJC,EAAQG,KAAK,aAEZ,CAACJ,EAAQC,IAOV,kCACE,cAAC,IAAD,CAAWI,UAAuB,YAAXL,EAAuBM,WAN3B,SAACC,GACtBC,QAAQC,IAAI,4BAA6BF,GACzCR,EAAYQ","file":"static/js/3.3df5426e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nimport { QuoteForm } from '../components';\n\n\nfunction NewQuote(props) {\n  const { sendRequest, status } = useHttp(addQuote);\n  /*\n    Using the `useHistory()` hook from `react-router-dom` to\n    access the browser history so that we can trigger history\n    changing actions. The `useHistory()` hook returns a history\n    object which we can use to navigate programmatically\n  */\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      /*\n      The history object has a `push()` method which is used to\n      navigate to a new page. This method pushes a new page on\n      the stack of pages that have been visited and therefore\n      allows the user to navigate to a previously visited page\n      by using the browser's back button.\n      It also has a `replace()` method which is also used to\n      navigate to a new page, however, this method replaces\n      the current page with the new page in the stack history\n      and therefore the user cannot navigate to a previously\n      visited page by using the browser's back button.\n      NOTE: Both `push()` and `replace()` methods take string\n      argument representing the path we want to navigate to\n    */\n    history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const handleAddQuote = (quote) => {\n    console.log('handleAddQuote called... ', quote);\n    sendRequest(quote);\n  }\n  return (\n    <section>\n      <QuoteForm isLoading={ status === 'pending' } onAddQuote={ handleAddQuote } />\n    </section>\n  );\n}\n\nexport default NewQuote;\n"],"sourceRoot":""}